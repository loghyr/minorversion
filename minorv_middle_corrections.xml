<!-- Copyright (C) The IETF Trust (2014) -->
<!-- Copyright (C) The Internet Society (2014) -->

<section anchor="ss:correction" title="Correction of Existing Minor Versions and Features">
  <t>
    The possibility always exists that there will be a need to
    correct an existing feature in some way, after the acceptance
    of that feature, or a minor version containing it, as a Proposed
    Standard.  While the working group can reduce the probability
    of such situations arising by waiting for running code before
    considering a feature as done, it cannot reduce the probability
    to zero.  As features are used more extensively and interact
    with other features, previously unseen flaws may be discovered
    and will need to be corrected.
  </t>

  <t>
    Such corrections are best done in a bis document updating the
    RFC defining the relevant feature definition document
    or minor version specification.  In making such correction,
    the working will have to carefully consider how to
    assure interoperability with older clients and servers.
  </t>

  <t>
    Often, corrections can be done without changing the protocol
    XDR.  However, incompatible changes in server or client behavior
    should not be mandated in order to avoid XDR changes.  When XDR
    changes are necessary as part of correcting a flaw, these should
    be done in a manner similar to that used when implementing new
    minor versions or features within them.  In particular,

    <list style="symbols">
      <t>
        Existing XDR structure may not be modified or deleted.
      </t>

      <t>
        XDR extensions may be used to correct existing protocol
        facilities in a manner similar to those used to add additional
        OPTIONAL features.  Such corrections may be done in an otherwise
        non-extensible minor version, if the working group judges it
        appropriate.
      </t>

      <t>
        When a correction is made to an OPTIONAL feature, the result
        is similar to a situation in which there are two independent
        OPTIONAL features.  A server may choose to implement either
        or both.
      </t>

      <t>
        When a correction is made to a MANDATORY feature, the situation
        becomes one in which neither the old nor the new new version
        of the feature is MANDATORY.  Instead, it is MANDATORY that
        a server support at least one of the two,  while each is
        individually OPTIONAL.  Although use of the corrected version
        is ultimately better, it is not RECOMMENDED, since the
        choice of which version to support if only one is
        supported will depend on the needs of clients, which may be slow
        to adopt the updated version.
      </t>

      <t>
	When a correction is made to a RECOMMENDED feature, the
	situation is similar to the case of a MANDATORY feature.
	Neither version is RECOMMENDED,  Neither the old nor the
	new version of the feature is RECOMMENDED.  Instead, it is
	RECOMMENDED that a server support at least one of the two,
	while each is individually OPTIONAL.
      </t>

      <t>
        In all of the cases above, it is appropriate that the old
        version of the feature, be considered OBSOLESCENT, with the
        expectation that the working group might, in a later minor
        version, decide that the older version is to become
        MANDATORY to NOT implement.
      </t>
    </list>
  </t>

  <t>
    Issues related to the effect of XDR corrections on existing
    documents, including co-ordination with other minor versions, are
    discussed in <xref target='ss:correction:docs' />.
  </t>

  <t>
    By doing things this way, the protocol with the XDR modification
    can accommodate clients and servers that support either the
    corrected or the uncorrected version of the protocol and also
    clients and servers aware of and capable of supporting both
    alternatives.

    <list style="symbols">
      <t>
        A client that supports only the earlier version of the feature
        (i.e., an older unfixed client) can determine whether the server
        it is connecting to supports the older version of feature.
        It is capable of interoperating with older servers that
        support only the unfixed protocol as well as ones that
        support both versions.
      </t>

      <t>
        A client that supports only the corrected version of the feature
        (i.e., a new or updated client) can determine whether the server
        it is connecting to supports the newer version of the feature.
        It is capable of interoperating with newer servers that support
        only the updated feature as well as ones that support
        both versions.
      </t>

      <t>
        A client that supports both the older and newer version of the
        feature can determine which version of the particular feature
        is supported by the server it is working with.
      </t>

      <t>
        A server that supports only the earlier version of the feature
        (i.e., an older unfixed server) can only successfully interoperate
        with older clients.  However newer clients can easily determine
        that the feature cannot be used on that server.
      </t>

      <t>
        A server that supports only the newer version of the feature
        (i.e., a new or updated server) can only successfully
        interoperate with newer clients.  However, older clients can
        easily determine that the feature cannot be used on that server.
        In the case of OPTIONAL features, clients can be expected
        to deal with non-support of that particular feature.
      </t>

      <t>
        A server that supports both the older and newer versions of
        the feature can interopt with all client variants.
      </t>
    </list>
  </t>

  <t>
    By using extensions in this manner, the protocol creates clear
    path which preserves the functioning of existing clients and
    servers and allowing client and server implementers to adopt
    the new version of the feature at a reasonable pace.
  </t>

  <section anchor='ss:correction:docs' title='Documentation of XDR changes'>
    <t>
      In the event of an XDR correction, as discussed above, some
      document updates will be required.  For the purposes of this
      discussion we call the minor version for which XDR correction
      is required minor version X and the minor version on which
      development is occurring minor version Y.
    </t>

    <t>
      The following discusses the specific updated documents which could be required:

      <list style='symbols'>
        <t>
          The specification of the feature in question will have to be
          updated to explain the issue, how it was fixed, and the
          compatibility and upgrade strategy.  Normally this will require
          an RFC updating the associated feature specification document.
          However, in the case of a correction to a feature documented in
          in a minor version definition document, the RFC will update that
          document instead.
        </t>

        <t>
          An updated XDR for minor version X will be produced and will be
          published as a updated to the minor version specification RFC for
          minor version X.
          <vspace blankLines="1"/>
          When the correction is to feature documented in a minor version
          definition, a single RFC will contain both updates to the minor
          version specification RFC.
        </t>

        <t>
          An updated minor version indexing document for minor version X
          is desirable but not absolutely necessary.
          <vspace blankLines="1"/>
          The question of updated minor version indexing documents for minor
          versions between X and Y should be addressed by the working group on a
          case-by-case basis.
        </t>

        <t>
          An updated XDR assignment document will be required.  It should
          be based on the most recent such document associated wit minor version
          Y and will serve as the basis for later XDR assignment drafts for minor
          version Y.
        </t>
      </list>
    </t>

    <t>
      The informational RFC's associated with minor version Y
      (version indexing document and XDR assignment document) will
      contain the effects of the correction when published.  Similarly,
      the minor version specification RFC will contain the XDR
      changes associated with the correction.
    </t>
  </section>
</section>
